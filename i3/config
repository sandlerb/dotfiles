#
# Global Settings ############################################################
#

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# Use the super (windows) key
set $mod Mod4

#
# Appearance #################################################################
#

# Pull colors in from Xresources, fallback set to when I added this
set_from_resource $yellow   color3    #b58900
set_from_resource $orange   color9    #cb4b16
set_from_resource $red      color1    #dc322f
set_from_resource $magenta  color5    #d33682
set_from_resource $violet   color13   #6c71c4
set_from_resource $blue     color4    #268bd2
set_from_resource $cyan     color6    #2aa198
set_from_resource $green    color2    #859900
set_from_resource $base03   color8    #002b36
set_from_resource $base02   color0    #073642
set_from_resource $base01   color10   #586e75
set_from_resource $base00   color11   #657b83
set_from_resource $base0    color12   #839496
set_from_resource $base1    color14   #93a1a1
set_from_resource $base2    color7    #eee8d5
set_from_resource $base3    color15   #fdf6e3

# Window colors
#                       Border        Background    Text     Indicator  Child Border
client.focused          $base03       $base01       $base1   $base01    $base01
client.unfocused        $base03       $base03       $base00  $base03    $base03
client.focused_inactive $base03       $base02       $base00  $base02    $base02
client.urgent           $red          $red          $base1   $red       $red
client.background       $base03

# Make the background slightly less contrasting
exec --no-startup-id xsetroot -solid "#000d12"

# Disable window titlebars so that i3-gaps' gaps work correctly
for_window [class="^.*"] border pixel 2

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack 9

# Gaps
gaps inner 5
gaps outer 5

# Only show a border if the container is the only one on the screen
smart_borders on

#
# Usability ##################################################################
#

# Disable focus following the mouse, prefer keyboard and clicking
focus_follows_mouse no

# Start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# Create a scratchpad on startup
exec --no-startup-id urxvt -name __scratchpad
for_window [class="URxvt" instance="__scratchpad"] move scratchpad

#
# Bindings ###################################################################
#

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+Ctrl+$left move left
bindsym $mod+Ctrl+$down move down
bindsym $mod+Ctrl+$up move up
bindsym $mod+Ctrl+$right move right

# split in horizontal orientation
bindsym $mod+' split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# focus the parent container
bindsym $mod+a focus parent

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Easier switching between workspaces
bindsym $mod+Shift+$right workspace next
bindsym $mod+Shift+$left workspace prev

# Easier moving between workspaces, with follow (Mod1 is either Alt key)
bindsym $mod+Mod1+$right move container to workspace next; workspace next
bindsym $mod+Mod1+$left move container to workspace prev; workspace prev

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 2 px or 2 ppt
        bindsym $down       resize grow height 2 px or 2 ppt
        bindsym $up         resize shrink height 2 px or 2 ppt
        bindsym $right      resize grow width 2 px or 2 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
