" TODO
"   probs a cool ASCII art header


"''''''''''''''"
"  VIM OPTIONS "
"''''''''''''''"

set nocompatible

syntax enable
syntax on
filetype off
execute pathogen#infect()
filetype plugin indent on

set mouse=a
set clipboard=unnamed
set encoding=utf-8
set showcmd     "show whatever command we're typing
set undofile    "make an undo file so we can undo/redo between sessions
"set relativenumber
set hidden      "hide buffers instead of closing them


let mapleader="'"


"" Whitespace ""
filetype indent on
set nowrap
set expandtab
set shiftwidth=4
set tabstop=4
set softtabstop=4
set backspace=indent,eol,start
set autoindent


"" Searching ""
set incsearch
set ignorecase


"" Completion ""
set wildmenu
set wildmode=list:longest


"" Layout ""
set title
set colorcolumn=80,81
set number
set hlsearch
set laststatus=2
set cursorline

nohl                    "Don't highlight my last search everytime I source this


"" Folding ""
set foldmethod=syntax
set nofoldenable


"" Mappings ""

inoremap jk <esc>
inoremap JK <esc>
inoremap kj <esc>
inoremap KJ <esc>

vnoremap jk <esc>
vnoremap JK <esc>
vnoremap kj <esc>
vnoremap KJ <esc>

nnoremap ; :

nnoremap <leader><space> :nohl<cr>

    "follow pattern for traversing search results with undo/redo
nnoremap U <c-r>

    "press space to insert one character then exit insert mode
nnoremap <Space> i_<Esc>r

    "one key-stroke to move to the end of a line
nmap 4 $

    "window switching
noremap <c-h> <c-w>h
noremap <c-j> <c-w>j
noremap <c-k> <c-w>k
noremap <c-l> <c-w>l

    "help I don't have page up or down keys
noremap <F8> <PageDown>
noremap <F9> <PageUp>


"'''''''''''"
"  PLUGINS  "
"'''''''''''"

"" vim-airline ""

    " check for airline symbols
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_powerline_fonts=1            " enable powerline symbols
let g:airline_them='solarized_dark'        " use solarized

"" NERDTree ""
    " close if only window left on exit
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif 

map <F1> :NERDTreeToggle<CR>


"" Solarized ""
let g:solarized_termtrans = 1
set background=dark
colorscheme solarized

